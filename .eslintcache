[{"D:\\react\\rdk_vehicle\\src\\components\\Auth.js":"1","D:\\react\\rdk_vehicle\\src\\App.js":"2","D:\\react\\rdk_vehicle\\src\\features\\authSlice.js":"3","D:\\react\\rdk_vehicle\\src\\app\\store.js":"4","D:\\react\\rdk_vehicle\\src\\components\\Brand.js":"5","D:\\react\\rdk_vehicle\\src\\components\\MainPage.js":"6","D:\\react\\rdk_vehicle\\src\\features\\vehicleSlice.js":"7","D:\\react\\rdk_vehicle\\src\\components\\Segment.js":"8","D:\\react\\rdk_vehicle\\src\\components\\Vehicle.js":"9","D:\\react\\rdk_vehicle\\src\\index.js":"10","D:\\react\\rdk_vehicle\\src\\serviceWorker.js":"11"},{"size":2876,"mtime":1612080337861,"results":"12","hashOfConfig":"13"},{"size":541,"mtime":1612077471832,"results":"14","hashOfConfig":"13"},{"size":1921,"mtime":1612080316456,"results":"15","hashOfConfig":"13"},{"size":272,"mtime":1612700248515,"results":"16","hashOfConfig":"13"},{"size":3587,"mtime":1612700365666,"results":"17","hashOfConfig":"13"},{"size":1588,"mtime":1612698906719,"results":"18","hashOfConfig":"13"},{"size":8304,"mtime":1612079395897,"results":"19","hashOfConfig":"13"},{"size":3663,"mtime":1612700354945,"results":"20","hashOfConfig":"13"},{"size":5864,"mtime":1612700796190,"results":"21","hashOfConfig":"13"},{"size":644,"mtime":1612062494313,"results":"22","hashOfConfig":"13"},{"size":5141,"mtime":1612062494313,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"22z93a",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\rdk_vehicle\\src\\components\\Auth.js",["47"],"D:\\react\\rdk_vehicle\\src\\App.js",[],"D:\\react\\rdk_vehicle\\src\\features\\authSlice.js",[],"D:\\react\\rdk_vehicle\\src\\app\\store.js",[],"D:\\react\\rdk_vehicle\\src\\components\\Brand.js",["48"],"D:\\react\\rdk_vehicle\\src\\components\\MainPage.js",["49"],"D:\\react\\rdk_vehicle\\src\\features\\vehicleSlice.js",[],"D:\\react\\rdk_vehicle\\src\\components\\Segment.js",["50"],"D:\\react\\rdk_vehicle\\src\\components\\Vehicle.js",["51"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./Vehicle.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  fetchAsyncGetVehicles,\r\n  fetchAsyncCreateVehicle,\r\n  fetchAsyncUpdateVehicle,\r\n  fetchAsyncDeleteVehicle,\r\n  editVehicle,\r\n  selectSegments,\r\n  selectBrands,\r\n  selectVehicles,\r\n  selectEditedVehicle,\r\n} from \"../features/vehicleSlice\";\r\n\r\nconst Vehicle = () => {\r\n  const dispatch = useDispatch();\r\n  const segments = useSelector(selectSegments);\r\n  const brands = useSelector(selectBrands);\r\n  const vehicles = useSelector(selectVehicles);\r\n  const editedVehicle = useSelector(selectEditedVehicle);\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n\r\n  const segmentOptions = segments?.map((seg) => (\r\n    <option key={seg.id} value={seg.id}>\r\n      {seg.segment_name}\r\n    </option>\r\n  ));\r\n  const brandOptions = brands?.map((brand) => (\r\n    <option key={brand.id} value={brand.id}>\r\n      {brand.brand_name}\r\n    </option>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    const fetchBootLoader = async () => {\r\n      const result = await dispatch(fetchAsyncGetVehicles());\r\n      if (fetchAsyncGetVehicles.rejected.match(result)) {\r\n        setSuccessMsg(\"Get error!\");\r\n      }\r\n    };\r\n    fetchBootLoader();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 data-testid=\"h3-vehicle\">Vehicle</h3>\r\n      <span className={styles.vehicle__status}>{successMsg}</span>\r\n      <div className={styles.vehicle__input}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"new vehicle name\"\r\n          value={editedVehicle.vehicle_name}\r\n          onChange={(e) =>\r\n            dispatch(\r\n              editVehicle({ ...editedVehicle, vehicle_name: e.target.value })\r\n            )\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"year of release\"\r\n          min=\"0\"\r\n          value={editedVehicle.release_year}\r\n          onChange={(e) =>\r\n            dispatch(\r\n              editVehicle({\r\n                ...editedVehicle,\r\n                release_year: e.target.value,\r\n              })\r\n            )\r\n          }\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"price\"\r\n          min=\"0\"\r\n          step=\"0.01\"\r\n          value={editedVehicle.price}\r\n          onChange={(e) =>\r\n            dispatch(\r\n              editVehicle({\r\n                ...editedVehicle,\r\n                price: e.target.value,\r\n              })\r\n            )\r\n          }\r\n        />\r\n      </div>\r\n      <select\r\n        data-testid=\"select-segment\"\r\n        value={editedVehicle.segment}\r\n        onChange={(e) =>\r\n          dispatch(editVehicle({ ...editedVehicle, segment: e.target.value }))\r\n        }\r\n      >\r\n        <option value={0}>Segment</option>\r\n        {segmentOptions}\r\n      </select>\r\n\r\n      <select\r\n        data-testid=\"select-brand\"\r\n        value={editedVehicle.brand}\r\n        onChange={(e) =>\r\n          dispatch(editVehicle({ ...editedVehicle, brand: e.target.value }))\r\n        }\r\n      >\r\n        <option value={0}>Brand</option>\r\n        {brandOptions}\r\n      </select>\r\n      <button\r\n        data-testid=\"btn-vehicle-post\"\r\n        disabled={\r\n          !editedVehicle.vehicle_name |\r\n          !editedVehicle.segment |\r\n          !editedVehicle.brand\r\n        }\r\n        onClick={\r\n          editedVehicle.id === 0\r\n            ? async () => {\r\n                await dispatch(fetchAsyncCreateVehicle(editedVehicle));\r\n                await dispatch(\r\n                  editVehicle({\r\n                    id: 0,\r\n                    vehicle_name: \"\",\r\n                    release_year: 2020,\r\n                    price: 0.0,\r\n                    segment: 0,\r\n                    brand: 0,\r\n                  })\r\n                );\r\n              }\r\n            : async () => {\r\n                const result = await dispatch(\r\n                  fetchAsyncUpdateVehicle(editedVehicle)\r\n                );\r\n                await dispatch(\r\n                  editVehicle({\r\n                    id: 0,\r\n                    vehicle_name: \"\",\r\n                    release_year: 2020,\r\n                    price: 0.0,\r\n                    segment: 0,\r\n                    brand: 0,\r\n                  })\r\n                );\r\n                if (fetchAsyncUpdateVehicle.fulfilled.match(result)) {\r\n                  setSuccessMsg(\"Updated in vehicle!\");\r\n                }\r\n              }\r\n        }\r\n      >\r\n        {editedVehicle.id === 0 ? \"Create\" : \"Update\"}\r\n      </button>\r\n      <ul>\r\n        {vehicles.map((vehicle) => (\r\n          <li className={styles.vehicle__item} key={vehicle.id}>\r\n            <span data-testid={`list-${vehicle.id}`}>\r\n              <strong data-testid={`name-${vehicle.id}`}>\r\n                {vehicle.vehicle_name}\r\n              </strong>\r\n              --{vehicle.release_year}--- Â¥{vehicle.price}\r\n              [M] ---\r\n              {vehicle.segment_name} {vehicle.brand_name}---\r\n            </span>\r\n            <div>\r\n              <button\r\n                data-testid={`delete-veh-${vehicle.id}`}\r\n                onClick={async () => {\r\n                  const result = await dispatch(\r\n                    fetchAsyncDeleteVehicle(vehicle.id)\r\n                  );\r\n                  if (fetchAsyncDeleteVehicle.fulfilled.match(result)) {\r\n                    setSuccessMsg(\"Deleted in vehicle!\");\r\n                  }\r\n                }}\r\n              >\r\n                delete\r\n              </button>\r\n              <button\r\n                data-testid={`edit-veh-${vehicle.id}`}\r\n                onClick={async () => {\r\n                  await dispatch(editVehicle(vehicle));\r\n                }}\r\n              >\r\n                edit\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Vehicle;\r\n","D:\\react\\rdk_vehicle\\src\\index.js",[],"D:\\react\\rdk_vehicle\\src\\serviceWorker.js",[],{"ruleId":"52","severity":1,"message":"53","line":22,"column":9,"nodeType":"54","messageId":"55","endLine":22,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":28,"column":6,"nodeType":"58","endLine":28,"endColumn":8,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"57","line":26,"column":6,"nodeType":"58","endLine":26,"endColumn":8,"suggestions":"60"},{"ruleId":"56","severity":1,"message":"57","line":28,"column":6,"nodeType":"58","endLine":28,"endColumn":8,"suggestions":"61"},{"ruleId":"56","severity":1,"message":"57","line":43,"column":6,"nodeType":"58","endLine":43,"endColumn":8,"suggestions":"62"},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["63"],["64"],["65"],["66"],{"desc":"67","fix":"68"},{"desc":"67","fix":"69"},{"desc":"67","fix":"70"},{"desc":"67","fix":"71"},"Update the dependencies array to be: [dispatch]",{"range":"72","text":"73"},{"range":"74","text":"73"},{"range":"75","text":"73"},{"range":"76","text":"73"},[834,836],"[dispatch]",[803,805],[864,866],[1280,1282]]